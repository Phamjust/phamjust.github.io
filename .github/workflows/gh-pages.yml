name: Deploy hugo site via github actions
on:
  push:
    branches:
      - main
  pull_request:

env: 
  URL_DEV: phamjust.github.io
  URL_PRO: justinpham.info

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  Deploy-dev-env:
    name: Deploy to phamjust.github.io
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive #fetch hugo themes (true or recursive)
          fetch-depth: 0 #fetch all history for .GetInfo and .Lastmod

      - name: Setup hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'

      - name: Build
        run: hugo --minify

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Note that the GITHUB_TOKEN is NOT a personal access token. 
          # A GitHub Actions runner automatically creates a GITHUB_TOKEN secret to authenticate in your workflow.
          # So, you can start to deploy immediately without any configuration
          publish_dir: ./public

  Deploy-prod-env:
    name: Deploy to www.justinpham.com (droplet)

    needs: Deploy-dev-env
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: 'latest'

    - name: Build
      run: hugo --gc --baseURL="https://${{ env.URL_PRO }}"

    - name: Install SSH key
      uses: shimataro/ssh-key-actions@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: 'temp placeholder'
    
    - name: Adding known hosts
      run: ssh-keygen -H ${{ secrets.KNOWN_HOSTS }} >> ~/.ssh/known_hosts

    - name: Copy files over to sever
      run: rsync -av ./public/ root@$ {{ secrets.SERVER_IP }}:/var/www/${{ env.URL_PRO }} # -av are two different flags here

  

    
      

